{"version":3,"sources":["components/Title.tsx","components/BoardButton.tsx","components/Bottom.tsx","components/Board.tsx","components/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Title","props","className","title","classNames","BoardButton","keyPos","split","map","item","parseInt","row","col","finalClassName","winningTracked","tracked","who","id","disabled","clicked","winnerExists","Bottom","info","onClick","Board","useState","tiles","Array","from","length","curPlayer","winner","winningTracks","status","setStatus","checkWinner","newTiles","topToBot","leftToRight","leftTopToRightBot","leftBotToRightTop","i","push","winningTrack","Set","event","target","Number","isNaN","_","newPlayer","putStone","line","j","has","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfbfe843.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface TitleProps {\r\n  title: string\r\n}\r\n\r\nfunction Title(props: TitleProps) {\r\n  return (\r\n    <div className=\"Title\">\r\n      { props.title }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import React from 'react';\r\n\r\ninterface BoardButtonProps {\r\n  keyPos: string,\r\n  who: number,\r\n  clicked: boolean,\r\n  winnerExists: boolean,\r\n  tracked: boolean\r\n}\r\n\r\nconst classNames: string[][] = [\r\n  ['LeftTopCorner', 'TopEdge', 'RightTopCorner'],\r\n  ['LeftEdge', 'InBoard', 'RightEdge'],\r\n  ['LeftBottomCorner', 'BottomEdge', 'RightBottomCorner']\r\n];\r\n\r\nfunction BoardButton(props: BoardButtonProps) {\r\n  const [row, col] = props.keyPos.split(',').map((item) => parseInt(item));\r\n  const rPos = (row === 0) ? 0 : ((row === 18) ? 2 : 1);\r\n  const cPos = (col === 0) ? 0 : ((col === 18) ? 2 : 1);\r\n  const finalClassName = classNames[rPos][cPos];\r\n\r\n  const winningTracked = props.tracked ? 'TrackedResult' : '';\r\n\r\n  return (\r\n    <button\r\n      className={`BoardButton Player${props.who} ${finalClassName} ${winningTracked}`}\r\n      key={props.keyPos}\r\n      id={props.keyPos}\r\n      disabled={props.clicked || props.winnerExists}\r\n    >\r\n      { props.who !== 0 ? (props.who === 1 ? 'âš«' : 'âšª') : 'ðŸ”´' }\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default BoardButton;\r\n","import React from 'react';\r\n\r\ninterface BottomProps {\r\n  info?: string,\r\n  onClick: Function\r\n}\r\n\r\nfunction Bottom(props: BottomProps) {\r\n  return (\r\n    <div className=\"Bottom\">\r\n      {\r\n        (props.info && props.info !== '') ?\r\n        <div> { props.info } </div> :\r\n        ''\r\n      }\r\n      <button onClick={() => {props.onClick()}}>\r\n        Reset\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bottom;\r\n","import React, { useState } from 'react';\r\nimport BoardButton from './BoardButton';\r\nimport Bottom from './Bottom';\r\n\r\nfunction Board() {\r\n  // Using React hooks\r\n  const [status, setStatus] = useState({\r\n    tiles: Array.from({length: 19}, () => Array.from({length: 19}, () => 0)),\r\n    curPlayer: 1,\r\n    winner: 0,\r\n    winningTracks: [[-1, -1]]\r\n  });\r\n\r\n  const putStone = (row: number, col: number) => {\r\n    if (status.tiles[row][col] !== 0) {\r\n      return;\r\n    }\r\n\r\n    const newTiles = Array.from({length: 19}, (_, i) => Array.from(status.tiles[i]));\r\n    let newPlayer = 0;\r\n\r\n    newTiles[row][col] = status.curPlayer;\r\n    switch (status.curPlayer) {\r\n      case 1:\r\n        newPlayer = 2;\r\n        break;\r\n      case 2:\r\n        newPlayer = 1;\r\n        break;\r\n    }\r\n\r\n    const [winner, winningTracks] = checkWinner(row, col, newTiles);\r\n\r\n    setStatus({\r\n      tiles: newTiles,\r\n      curPlayer: newPlayer,\r\n      winner: winner,\r\n      winningTracks: winningTracks\r\n    });\r\n  };\r\n\r\n  const resetBoard = () => {\r\n    setStatus({\r\n      tiles: Array.from({length: 19}, () => Array.from({length: 19}, () => 0)),\r\n      curPlayer: 1,\r\n      winner: 0,\r\n      winningTracks: [[-1, -1]]\r\n    });\r\n  };\r\n\r\n  const checkWinner = (row: number, col: number, newTiles: number[][]): [number, number[][]] => {\r\n    const winner: number = newTiles[row][col];\r\n\r\n    const topToBot: number[][] = [[row, col]];\r\n    const leftToRight: number[][] = [[row, col]];\r\n    const leftTopToRightBot: number[][] = [[row, col]];\r\n    const leftBotToRightTop: number[][] = [[row, col]];\r\n\r\n    // Vertical\r\n    for (let i = 1; row - i >= 0 && newTiles[row - i][col] === winner; i++) {\r\n      topToBot.push([row - i, col]);\r\n    }\r\n    for (let i = 1; row + i < 19 && newTiles[row + i][col] === winner; i++) {\r\n      topToBot.push([row + i, col]);\r\n    }\r\n    if (topToBot.length === 5) {\r\n      return [winner, topToBot];\r\n    }\r\n\r\n    // Horizontal\r\n    for (let i = 1; col - i >= 0 && newTiles[row][col - i] === winner; i++) {\r\n      leftToRight.push([row, col - i]);\r\n    }\r\n    for (let i = 1; col + i < 19 && newTiles[row][col + i] === winner; i++) {\r\n      leftToRight.push([row, col + i]);\r\n    }\r\n    if (leftToRight.length === 5) {\r\n      return [winner, leftToRight];\r\n    }\r\n\r\n    // Left top to right bottom\r\n    for (let i = 1; row - i >= 0 && col - i >= 0 && newTiles[row - i][col - i] === winner; i++) {\r\n      leftTopToRightBot.push([row - i, col - i]);\r\n    }\r\n    for (let i = 1; row + i < 19 && col + i < 19 && newTiles[row + i][col + i] === winner; i++) {\r\n      leftTopToRightBot.push([row + i, col + i]);\r\n    }\r\n    if (leftTopToRightBot.length === 5) {\r\n      return [winner, leftTopToRightBot];\r\n    }\r\n\r\n    // Left bottom to right top\r\n    for (let i = 1; row + i < 19 && col - i >= 0 && newTiles[row + i][col - i] === winner; i++) {\r\n      leftBotToRightTop.push([row + i, col - i]);\r\n    }\r\n    for (let i = 1; row - i >= 0 && col + i < 19 && newTiles[row - i][col + i] === winner; i++) {\r\n      leftBotToRightTop.push([row - i, col + i]);\r\n    }\r\n    if (leftBotToRightTop.length === 5) {\r\n      return [winner, leftBotToRightTop];\r\n    }\r\n\r\n    return [0, []];\r\n  };\r\n\r\n  const winningTrack: Set<string> = new Set(status.winningTracks.map((item) => `${item[0]},${item[1]}`));\r\n\r\n  return (\r\n    <div className=\"Board\" onClick={(event) => {\r\n      const [row, col] = (event.target as HTMLElement).id.split(',').map((item) => parseInt(item));\r\n      if (Number.isNaN(row) || Number.isNaN(col)) {\r\n        return;\r\n      }\r\n\r\n      putStone(row, col);\r\n    }}>\r\n      <div className=\"Tiles\">\r\n        {\r\n          status.tiles.map((line, i) => {\r\n            return line.map((item, j) => {\r\n              return (<BoardButton\r\n                key={`r${i}c${j}`}\r\n                keyPos={`${i},${j}`}\r\n                who={item}\r\n                clicked={item !== 0}\r\n                winnerExists={status.winner !== 0}\r\n                tracked={status.winner !== 0 ? (winningTrack.has(`${i},${j}`)) : false}\r\n              />);\r\n            });\r\n          })\r\n        }\r\n      </div>\r\n      <Bottom\r\n        info={status.winner !== 0 ? `Player ${status.winner} wins!` : `Player ${status.curPlayer}'s turn!`}\r\n        onClick={resetBoard}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport Title from './Title';\r\nimport Board from './Board';\r\n\r\nfunction Main() {\r\n  return (\r\n    <main className=\"Main\">\r\n      <Title title=\"React Gomoku\" />\r\n      <Board />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport './App.css';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}