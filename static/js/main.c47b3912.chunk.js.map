{"version":3,"sources":["components/Board.module.css","components/Title.tsx","store/StoreState.tsx","theme/Theme.tsx","components/BoardButton.tsx","components/Board.tsx","sfxs/SoundEffects.tsx","store/StoreProcess.tsx","store/Store.tsx","components/Score.tsx","components/GameBottom.tsx","components/ReplayBottom.tsx","components/Bottom.tsx","components/ModeChanger.tsx","components/WinnerEffect.tsx","components/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/BoardButton.module.css","components/Bottom.module.css"],"names":["module","exports","Title","props","className","title","initState","mode","tiles","Array","from","length","curPlayer","history","winner","winningTracks","Set","score","THEME_INDEX","dat","Date","day","getDate","month","getMonth","themeButtons","themeTitle","classNames","styles","LeftTopCorner","TopEdge","RightTopCorner","LeftEdge","InBoard","RightEdge","LeftBottomCorner","BottomEdge","RightBottomCorner","BoardButton","keyPos","split","map","item","parseInt","row","col","rPos","cPos","buttonStatus","useSelector","state","who","available","winningTracked","has","playerType","Player1","Player2","Player0","finalClassName","TrackedResult","id","disabled","Board","dispatch","useDispatch","onClick","event","target","Number","isNaN","type","payload","Tiles","line","i","_","j","SFXs","player1PutSFX","document","querySelector","player2PutSFX","resetSFX","undoSFX","resultSFX","stopSFX","wav","pause","currentTime","playWav","play","playSFX","wavName","isInRange","HEIGHT","WIDTH","getNewTiles","status","player","newTiles","getNewPlayer","putStone","newPlayer","directions","n","rDir","cDir","collected","curRow","curCol","push","checkWinner","newHistory","newScore","undo","tmp","pop","undefined","resetBoard","isAvailableMode","modeName","store","createStore","action","Score","p1Score","p2Score","useEffect","GameBottom","Bottom","replayData","width","height","getState","file","createElement","fileBlob","Blob","JSON","stringify","href","URL","createObjectURL","download","click","ReplayBottom","useState","curTrack","maxTrack","setStatus","accept","onChange","files","reader","FileReader","addEventListener","result","parse","readAsText","loadReplay","renderBottom","ModeCahnger","value","name","defaultChecked","WinnerEffect","Main","ModeChanger","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c47b3912.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Board\":\"Board_Board__3vYMo\",\"Tiles\":\"Board_Tiles__1R0S7\"};","import React from 'react';\r\n\r\ninterface TitleProps {\r\n  title: string\r\n}\r\n\r\nfunction Title(props: TitleProps) {\r\n  return (\r\n    <div className=\"Title\">\r\n      { props.title }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","export interface StoreState {\r\n  mode: string,\r\n  tiles: number[][],\r\n  curPlayer: number,\r\n  history: number[][],\r\n  winner: number,\r\n  winningTracks: Set<string>,\r\n  score: number[]\r\n};\r\n\r\nexport const initState: StoreState = {\r\n  mode: 'GAME',\r\n  tiles: Array.from({length: 19}, () => Array.from({length: 19}, () => 0)),\r\n  curPlayer: 1,\r\n  history: new Array<number[]>(),\r\n  winner: 0,\r\n  winningTracks: new Set<string>(),\r\n  score: [0, 0]\r\n};\r\n","const THEME_BUTTONS = {\r\n  'default': ['⚫', '⚪'],\r\n  'halloween': ['🟣', '🟠'],\r\n  'winter': ['🔴', '🟢']\r\n};\r\n\r\nconst THEME_TITLES = {\r\n  'default': 'React Gomoku',\r\n  'halloween': 'Halloween Gomoku',\r\n  'winter': 'Holiday Gomoku'\r\n};\r\n\r\nconst THEME_INDEX = (() => {\r\n  const dat: Date = new Date();\r\n\r\n  const day: number = dat.getDate();\r\n  const month: number = dat.getMonth();\r\n\r\n  if (month === 9 && day === 31) {\r\n    // October 31\r\n    return 'halloween';\r\n  } else if ((month === 0 && day === 1) || (month === 11 && day === 25)) {\r\n    // January 1 or December 25\r\n    return 'winter';\r\n  }\r\n\r\n  return 'default';\r\n})();\r\n\r\nexport const themeButtons: string[] = THEME_BUTTONS[THEME_INDEX];\r\nexport const themeTitle: string = THEME_TITLES[THEME_INDEX];\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { StoreState, initState } from '../store/StoreState';\r\nimport { themeButtons } from '../theme/Theme';\r\nimport styles from './BoardButton.module.css';\r\n\r\ninterface BoardButtonProps {\r\n  keyPos: string\r\n}\r\n\r\ninterface BoardButtonState {\r\n  who: number,\r\n  available: boolean,\r\n  winningTracked: boolean\r\n}\r\n\r\nconst classNames: string[][] = [\r\n  [styles.LeftTopCorner, styles.TopEdge, styles.RightTopCorner],\r\n  [styles.LeftEdge, styles.InBoard, styles.RightEdge],\r\n  [styles.LeftBottomCorner, styles.BottomEdge, styles.RightBottomCorner]\r\n];\r\n\r\nfunction BoardButton(props: BoardButtonProps) {\r\n  const [row, col] = props.keyPos.split(',').map((item) => parseInt(item));\r\n  const rPos = (row === 0) ? 0 : ((row === 18) ? 2 : 1);\r\n  const cPos = (col === 0) ? 0 : ((col === 18) ? 2 : 1);\r\n  const selector = (state: StoreState = initState): BoardButtonState => {\r\n    return {\r\n      who: state.tiles[row][col],\r\n      available: (state.mode === 'GAME') && (state.winner === 0) && (state.tiles[row][col] === 0),\r\n      winningTracked: state.winningTracks.has(`[${row},${col}]`)\r\n    };\r\n  }\r\n  const buttonStatus = useSelector(selector);\r\n  const playerType: string = (buttonStatus.who !== 0) ? (buttonStatus.who === 1 ? styles.Player1 : styles.Player2) : styles.Player0;\r\n  const finalClassName: string = classNames[rPos][cPos];\r\n  const winningTracked: string = buttonStatus.winningTracked ? styles.TrackedResult : '';\r\n\r\n  return (\r\n    <button\r\n      className={`${styles.BoardButton} ${playerType} ${finalClassName} ${winningTracked}`}\r\n      key={props.keyPos}\r\n      id={props.keyPos}\r\n      disabled={!buttonStatus.available}\r\n    >\r\n      { buttonStatus.who !== 0 ? (themeButtons[buttonStatus.who - 1]) : '🔴' }\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default BoardButton;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport BoardButton from './BoardButton';\r\nimport styles from './Board.module.css'\r\n\r\nfunction Board() {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={styles.Board} onClick={(event) => {\r\n      const [row, col] = (event.target as HTMLElement).id.split(',').map((item) => parseInt(item));\r\n\r\n      if (Number.isNaN(row) || Number.isNaN(col)) {\r\n        return;\r\n      }\r\n\r\n      dispatch({\r\n        type: 'PUT',\r\n        payload: [row, col]\r\n      });\r\n    }}>\r\n      <div className={styles.Tiles}>\r\n        {\r\n          Array.from({length: 19}, () => Array.from({length: 19})).map((line, i) => {\r\n            return line.map((_, j) => {\r\n              return (<BoardButton\r\n                key={`r${i}c${j}`}\r\n                keyPos={`${i},${j}`}\r\n              />);\r\n            });\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","const SFXs = {\r\n  player1PutSFX: document.querySelector('#player1PutSFX'),\r\n  player2PutSFX: document.querySelector('#player2PutSFX'),\r\n  resetSFX: document.querySelector('#resetSFX'),\r\n  undoSFX: document.querySelector('#undoSFX'),\r\n  resultSFX: document.querySelector('#resultSFX')\r\n}\r\n\r\nfunction stopSFX(wav: Element | null): void {\r\n  (wav as HTMLAudioElement).pause();\r\n  (wav as HTMLAudioElement).currentTime = 0;\r\n}\r\n\r\nfunction initSFX(): void {\r\n  stopSFX(SFXs.player1PutSFX);\r\n  stopSFX(SFXs.player2PutSFX);\r\n  stopSFX(SFXs.undoSFX);\r\n  stopSFX(SFXs.resetSFX);\r\n  stopSFX(SFXs.resultSFX);\r\n}\r\n\r\nfunction playWav(wav: Element | null): void {\r\n  initSFX();\r\n  (wav as HTMLAudioElement).play();\r\n}\r\n\r\nexport function playSFX(wavName: string): void {\r\n  switch (wavName) {\r\n    case 'P1PUT':\r\n      playWav(SFXs.player1PutSFX);\r\n      break;\r\n    case 'P2PUT':\r\n      playWav(SFXs.player2PutSFX);\r\n      break;\r\n    case 'UNDO':\r\n      playWav(SFXs.undoSFX);\r\n      break;\r\n    case 'RESET':\r\n      playWav(SFXs.resetSFX);\r\n      break;\r\n    case 'RESULT':\r\n      playWav(SFXs.resultSFX);\r\n      break;     \r\n  }\r\n}\r\n","import { StoreState } from './StoreState';\r\nimport { playSFX } from '../sfxs/SoundEffects';\r\n\r\nconst EMPTY: number = 0;\r\nconst WIDTH: number = 19;\r\nconst HEIGHT: number = 19;\r\nconst OBJECTIVE: number = 5;\r\nconst COL_BOUNDARY: number = WIDTH - 1;\r\nconst ROW_BOUNDARY: number = HEIGHT - 1;\r\n\r\nfunction isInRange(row: number, col: number): boolean {\r\n  if (row < 0 || row > ROW_BOUNDARY || col < 0 || col > COL_BOUNDARY) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nfunction getNewTiles(status: StoreState, row: number, col: number, player: number): number[][] {\r\n  const newTiles = Array.from({length: HEIGHT}, (_, i) => Array.from(status.tiles[i]));\r\n  newTiles[row][col] = player;\r\n  return newTiles;\r\n};\r\n\r\nfunction getNewPlayer(curPlayer: number): number {\r\n  switch (curPlayer) {\r\n    case 1:\r\n      return 2;\r\n    case 2:\r\n      return 1;\r\n    default:\r\n      return 0;\r\n  }\r\n};\r\n\r\nfunction checkWinner(row: number, col: number, newTiles: number[][]): [number, number[][]] {\r\n  const winner: number = newTiles[row][col];\r\n\r\n  const directions: number[][] = [[1, 0], [0, 1], [1, 1], [1, -1]];\r\n  for (let n: number = 0; n < directions.length; n++) {\r\n    const [rDir, cDir] = directions[n];\r\n    const collected: number[][] = [[row, col]];\r\n\r\n    let [curRow, curCol] = [row + rDir, col + cDir];\r\n    while (isInRange(curRow, curCol) && newTiles[curRow][curCol] === winner) {\r\n      collected.push([curRow, curCol]);\r\n      curRow += rDir;\r\n      curCol += cDir;\r\n    }\r\n\r\n    [curRow, curCol] = [row - rDir, col - cDir];\r\n    while (isInRange(curRow, curCol) && newTiles[curRow][curCol] === winner) {\r\n      collected.push([curRow, curCol]);\r\n      curRow -= rDir;\r\n      curCol -= cDir;\r\n    }\r\n\r\n    if (collected.length === OBJECTIVE) {\r\n      return [winner, collected];\r\n    }\r\n  }\r\n\r\n  return [0, []];\r\n};\r\n\r\nexport function putStone(status: StoreState, row: number, col: number): StoreState {\r\n  if (status.tiles[row][col] !== 0) {\r\n    return status;\r\n  }\r\n\r\n  const newTiles: number[][] = getNewTiles(status, row, col, status.curPlayer);\r\n  const newPlayer: number = getNewPlayer(status.curPlayer);\r\n\r\n  const [winner, winningTracks] = checkWinner(row, col, newTiles);\r\n\r\n  const newHistory = Array.from(status.history);\r\n  newHistory.push([row, col]);\r\n\r\n  const newScore = Array.from(status.score);\r\n\r\n  if (winner !== 0) {\r\n    playSFX('RESULT');\r\n    if (status.mode === 'GAME') {\r\n      newScore[winner - 1]++;\r\n    }\r\n  } else {\r\n    playSFX(`P${status.curPlayer}PUT`);\r\n  }\r\n\r\n  return {\r\n    ...status,\r\n    tiles: newTiles,\r\n    curPlayer: newPlayer,\r\n    history: newHistory,\r\n    winner: winner,\r\n    winningTracks: new Set<string>(\r\n      winningTracks.map((item) => `[${item[0]},${item[1]}]`)\r\n    ),\r\n    score: newScore\r\n  };\r\n};\r\n\r\nexport function undo(status: StoreState): StoreState {\r\n  if (status.history.length === 0) {\r\n    return status;\r\n  }\r\n\r\n  const newHistory = Array.from(status.history);\r\n  const tmp: number[] | undefined = newHistory.pop();\r\n\r\n  if (tmp === undefined) {\r\n    return status;\r\n  }\r\n\r\n  const [row, col] = tmp;\r\n  if (!isInRange(row, col)) {\r\n    return status;\r\n  }\r\n\r\n  const newTiles: number[][] = getNewTiles(status, row, col, EMPTY);\r\n  const newPlayer: number = getNewPlayer(status.curPlayer);\r\n\r\n  playSFX('UNDO');\r\n\r\n  return {\r\n    ...status,\r\n    tiles: newTiles,\r\n    curPlayer: newPlayer,\r\n    history: newHistory,\r\n    winner: EMPTY,\r\n    winningTracks: new Set<string>()\r\n  };\r\n};\r\n\r\nexport function resetBoard(status: StoreState): StoreState {\r\n  playSFX('RESET');\r\n  \r\n  return {\r\n    ...status,\r\n    tiles: Array.from({length: HEIGHT}, () => Array.from({length: WIDTH}, () => 0)),\r\n    curPlayer: 1,\r\n    history: Array<number[]>(),\r\n    winner: 0,\r\n    winningTracks: new Set<string>()\r\n  };\r\n};\r\n\r\nexport function isAvailableMode(modeName: string) {\r\n  switch (modeName) {\r\n    case 'GAME': case 'REPLAY':\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport { StoreState, initState } from './StoreState';\r\nimport { StoreActions } from './StoreActions';\r\nimport {\r\n  putStone,\r\n  undo,\r\n  resetBoard,\r\n  isAvailableMode\r\n} from './StoreProcess';\r\n\r\nexport const store = createStore((state: StoreState = initState, action: StoreActions) => {\r\n  /*\r\n    1. PUT TYPE ACTION (coords: [row, col])\r\n      - Put a tile into new coords\r\n      - Push coords as an element in history\r\n      - Check winner and winningTracks\r\n      - Switch player\r\n    2. UNDO TYPE ACTION\r\n      - If there's no history, stop this process\r\n      - Clear a tile in coords of the top element in history\r\n      - Pop the top element in history\r\n      - Switch player\r\n      - Revoke winner and winningTracks\r\n    3. RESET TYPE ACTION - Resets the whole board\r\n      - Clear all the tiles\r\n      - Set curPlayer to 1\r\n      - Clear history\r\n      - Set winner to 0\r\n      - Clear winningTracks\r\n    4. MODECHANGE TYPE ACTION (mode: 'GAME' or 'REPLAY')\r\n      - Mode change resets the whole board\r\n  */\r\n  switch (action.type) {\r\n    case 'PUT':\r\n      return putStone(state, action.payload[0], action.payload[1]);\r\n    case 'UNDO':\r\n      return undo(state);\r\n    case 'RESET':\r\n      return resetBoard(state);\r\n    case 'MODECHANGE':\r\n      return {\r\n        ...resetBoard(state),\r\n        mode: isAvailableMode(action.payload) ? action.payload : state.mode\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n});\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { initState, StoreState } from '../store/StoreState';\r\n\r\ninterface ScoreState {\r\n  p1Score: number,\r\n  p2Score: number\r\n}\r\n\r\nfunction Score() {\r\n  const selector = (state: StoreState = initState): ScoreState => {\r\n    return {\r\n      p1Score: state.score[0],\r\n      p2Score: state.score[1]\r\n    };\r\n  };\r\n  const status = useSelector(selector);\r\n\r\n  useEffect(() => {\r\n    document.title = `React Gomoku :: ${status.p1Score} - ${status.p2Score}`;\r\n  });\r\n\r\n  return (\r\n    <div className=\"Score\">\r\n      <span>\r\n        {status.p1Score} - {status.p2Score}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Score;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { store } from '../store/Store';\r\nimport { StoreState } from '../store/StoreState';\r\nimport styles from './Bottom.module.css';\r\nimport Score from './Score';\r\n\r\nfunction GameBottom() {\r\n  const dispatch = useDispatch();\r\n  \r\n  return (\r\n    <div className={styles.Bottom}>\r\n      <Score />\r\n      <button onClick={() => {\r\n        dispatch({ type: 'UNDO' });\r\n      }}>\r\n        Undo\r\n      </button>\r\n      <button onClick={() => {\r\n        dispatch({ type: 'RESET' });\r\n      }}>\r\n        Reset\r\n      </button>\r\n      <button onClick={() => {\r\n        const status: StoreState = store.getState();\r\n\r\n        const replayData = {\r\n          width: 19,\r\n          height: 19,\r\n          history: status.history\r\n        };\r\n\r\n        const file: HTMLAnchorElement = document.createElement('a');\r\n        const fileBlob: Blob = new Blob([JSON.stringify(replayData)], {type: 'json'});\r\n        file.href = URL.createObjectURL(fileBlob);\r\n        file.download = 'replay.json';\r\n        file.click();\r\n      }}>\r\n        Save As Replay\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameBottom;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction ReplayBottom() {\r\n  const dispatch = useDispatch();\r\n  const [status, setStatus] = useState({\r\n    history: Array<number[]>(),\r\n    curTrack: 0,\r\n    maxTrack: 0\r\n  });\r\n\r\n  const loadReplay = (files: FileList): void => {\r\n    if (files.length <= 0) {\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => {\r\n      const result = JSON.parse(reader.result as string);\r\n\r\n      if (result.width !== 19 || result.height !== 19) {\r\n        return;\r\n      }\r\n\r\n      if (result.history === null || result.history === undefined) {\r\n        return;\r\n      }\r\n      \r\n      dispatch({ type: 'RESET' });\r\n      setStatus({\r\n        history: result.history,\r\n        curTrack: 0,\r\n        maxTrack: result.history.length\r\n      });\r\n    });\r\n\r\n    reader.readAsText(files[0]);\r\n  };\r\n\r\n  const onClickPrev = (): void => {\r\n    if (status.curTrack <= 0) {\r\n      return;\r\n    }\r\n\r\n    dispatch({ type: 'UNDO' });\r\n    setStatus({\r\n      history: status.history,\r\n      curTrack: status.curTrack - 1,\r\n      maxTrack: status.history.length\r\n    });\r\n  };\r\n\r\n  const onClickNext = () => {\r\n    if (status.curTrack >= status.maxTrack) {\r\n      return;\r\n    }\r\n\r\n    dispatch({\r\n      type: 'PUT',\r\n      payload: status.history[status.curTrack]\r\n    });\r\n\r\n    setStatus({\r\n      history: status.history,\r\n      curTrack: status.curTrack + 1,\r\n      maxTrack: status.history.length\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Bottom\">\r\n      <label>Replay File: </label>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/json\"\r\n        onChange={(event) => {\r\n          if ((event.target as HTMLInputElement).files) {\r\n            loadReplay((event.target as HTMLInputElement).files as FileList);\r\n          }\r\n        }\r\n      }/>\r\n      <button onClick={onClickPrev}>\r\n        Prev\r\n      </button>\r\n      {\r\n        `${status.curTrack} / ${status.maxTrack}`\r\n      }\r\n      <button onClick={onClickNext}>\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReplayBottom;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { StoreState, initState } from '../store/StoreState';\r\nimport styles from './Bottom.module.css';\r\nimport GameBottom from './GameBottom';\r\nimport ReplayBottom from './ReplayBottom';\r\n\r\ninterface BottomState {\r\n  mode: string\r\n}\r\n\r\nfunction Bottom() {\r\n  const selector = (state: StoreState = initState): BottomState => {\r\n    return {\r\n      mode: state.mode\r\n    };\r\n  };\r\n  const status = useSelector(selector);\r\n\r\n  const renderBottom = (): JSX.Element => {\r\n    switch (status.mode) {\r\n      case 'GAME':\r\n        return (\r\n          <GameBottom />\r\n        );\r\n      case 'REPLAY':\r\n        return (\r\n          <ReplayBottom />\r\n        );\r\n      default:\r\n        return (\r\n          <div>\r\n            Invalid mode\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.Bottom}>\r\n      {\r\n        renderBottom()\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bottom;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction ModeCahnger() {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"ModeChanger\" onChange={(event) => {\r\n      dispatch({\r\n        type: 'MODECHANGE',\r\n        payload: (event.target as HTMLInputElement).value\r\n      });\r\n    }}>\r\n      <input type=\"radio\" id=\"game\" name=\"mode\" value=\"GAME\" defaultChecked />\r\n      <label>Game</label>\r\n      <input type=\"radio\" id=\"replay\" name=\"mode\" value=\"REPLAY\" />\r\n      <label>Replay</label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModeCahnger;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { initState, StoreState } from '../store/StoreState';\r\n\r\n\r\ninterface WinnerEffectState {\r\n  winner: number,\r\n  mode: string\r\n};\r\n\r\nfunction WinnerEffect() {\r\n  const selector = (state: StoreState = initState): WinnerEffectState => {\r\n    return {\r\n      winner: state.winner,\r\n      mode: state.mode\r\n    }\r\n  };\r\n  const status = useSelector(selector);\r\n  const renderWinnerEffect = (): JSX.Element => {\r\n    if (status.mode === 'GAME' && status.winner !== 0) {\r\n      return (\r\n        <div className=\"WinnerEffect\">\r\n          <div className=\"WinnerEffectContent\">\r\n            <span>\r\n              Player { status.winner } Wins!\r\n            </span>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (<div></div>);\r\n    }\r\n  };\r\n\r\n  return (\r\n    renderWinnerEffect()\r\n  );\r\n}\r\n\r\nexport default WinnerEffect;\r\n","import React from 'react';\r\nimport Title from './Title';\r\nimport Board from './Board';\r\nimport Bottom from './Bottom';\r\nimport ModeChanger from './ModeChanger';\r\nimport WinnerEffect from './WinnerEffect';\r\nimport { themeTitle } from '../theme/Theme';\r\n\r\nfunction Main() {\r\n  return (\r\n    <main className=\"Main\">\r\n      <Title title={themeTitle} />\r\n      <ModeChanger />\r\n      <Board />\r\n      <Bottom />\r\n      <WinnerEffect />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport './App.css';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/Store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BoardButton\":\"BoardButton_BoardButton__2YGCI\",\"Player0\":\"BoardButton_Player0__2NSob\",\"Player1\":\"BoardButton_Player1__1XAS6\",\"Player2\":\"BoardButton_Player2__qXutw\",\"LeftTopCorner\":\"BoardButton_LeftTopCorner__2minL\",\"RightTopCorner\":\"BoardButton_RightTopCorner__3qdAy\",\"LeftBottomCorner\":\"BoardButton_LeftBottomCorner__1feHF\",\"RightBottomCorner\":\"BoardButton_RightBottomCorner__2mICm\",\"LeftEdge\":\"BoardButton_LeftEdge__3G5n6\",\"RightEdge\":\"BoardButton_RightEdge__1kWCK\",\"TopEdge\":\"BoardButton_TopEdge__2cyOm\",\"BottomEdge\":\"BoardButton_BottomEdge__3sBQI\",\"InBoard\":\"BoardButton_InBoard__oUbcb\",\"TrackedResult\":\"BoardButton_TrackedResult__38tq2\",\"FlashTrackedResult\":\"BoardButton_FlashTrackedResult__va6Sj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bottom\":\"Bottom_Bottom__2XzBw\"};"],"sourceRoot":""}